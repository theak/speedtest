{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["stripHtml","html","str","ReactDOMServer","renderToStaticMarkup","txt","document","createElement","innerHTML","parts","value","replace","split","length","prompts","clear","break","i","text","Next","props","currentPrompt","onClick","type","App","state","taskCompleted","shouldClear","taskStartTime","taskTimes","debug","handleChange","bind","handleNext","event","strip","replaceAll","toLowerCase","this","console","log","target","indexOf","setState","Date","now","textbox","getElementById","blur","focus","select","next","promptIndicator","className","rows","id","onChange","action","method","jsmodel","readOnly","name","onFocus","handleFocus","JSON","stringify","placeholder","navigator","userAgent","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.065b87a1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\n\nimport './App.css';\n\nfunction stripHtml(html) {\n  const str = ReactDOMServer.renderToStaticMarkup(html);\n  var txt = document.createElement(\"textarea\");\n  txt.innerHTML = str;\n  const parts = txt.value.replace(/(<([^>]+)>)/gi, \"\").split(':');\n  return parts[parts.length - 1];\n}\n\nconst prompts = [\n  //Block 1:\n  {html: <p>Hello how are you doing?</p>},\n  {html: <p><i><b>Clear and replace text</b> with:</i>Yo Jason, what's up?</p>, clear: true},\n  {html: <p>I would love to catch up. Are you free on Thursday night for a beer?</p>, clear: false},\n  {html: <p><i>Change Thursday to Friday:</i>I would love to catch up. Are you free on <b>Friday</b> night for a beer?</p>, clear: true},\n  {html: <p><i>Insert cake emoji and party emoji:</i>Saturday it's my birthday so I want to start the celebration early üéÇ</p>, clear: true},\n  {html: <p>I was thinking we could meet at teske</p>, clear: true},\n  {html: <p><i>Take a break, then tap for next prompt when you're ready...</i></p>, break: true, clear: true},\n\n  //Block 2:\n  {html: <p>Hey I have some time off.  Are you interested in going backpacking next weekend?</p>},\n  {html: <p><i>Replace weekend with Friday:</i>Hey I have some time off.  Are you interested in going backpacking next <b>Friday</b>?</p>, clear: true},\n  {html: <p>I can drive, but my car is acting a bit funky</p>},\n  {html: <p><i><b>Clear and replace text</b> with:</i>My car is acting weird. Can you drive?</p>, clear: true},\n  {html: <p><i>Add laughing emoji:</i>Also you should ask Anne to join.  She is so funny üòÇ</p>, clear: true},\n  {html: <p>I am happy to go anywhere but I was thinking about going to Mount Monadnock</p>, clear: true},\n  {html: <p><i>Take a break, then tap for next prompt when you're ready...</i></p>, break: true, clear: true},\n\n  //Block 3:\n  {html: <p>Can you stop at the grocery store?</p>, clear: true},\n  {html: <p>I want to start preparing that dinner for Thursday night.</p>},\n  {html: <p><i>Replace \"Thursday\" with \"Wednesday\":</i>I want to start preparing that dinner for <b>Wednesday</b> night.</p>, clear: true},\n  {html: <p>I want to try and make that new chili recipe.</p>},\n  {html: <p><i>Clear and replace with:</i>What do you think about chili?</p>, clear: true},\n  {html: <p>I was also thinking about making some paczki for next week</p>, clear: true},\n  {html: <p><i>Add heart eyes emoji:</i>Thank you üòç</p>, clear: true},\n  {html: <p><i>Take a break, then tap for next prompt when you're ready...</i></p>, break: true, clear: true},\n\n  //Block 4:\n  {html: <p>Hey can I borrow your chainsaw next weekend?</p>},\n  {html: <p><i>Change next to this:</i>Hey can I borrow your chainsaw <b>this</b> weekend?</p>, clear: true},\n  {html: <p>I could probably use an extra hand</p>},\n  {html: <p><i><b>Clear and replace text</b> with</i>Could you also give me a hand?</p>, clear: true},\n  {html: <p>When we are done I can take you to go get some akvavit</p>, clear: true},\n  {html: <p><i>Insert thank you emoji:</i>Thank you üôè</p>, clear:true},\n  {html: <p><i>Take a break, then tap for next prompt when you're ready...</i></p>, break: true, clear: true},\n\n  //Block 5:\n  {html: <p>Where do you want to go for vacation?</p>, clear:true},\n  {html: <p>August looks pretty good to me</p>},\n  {html: <p><i>Change August to September:</i><b>September</b> looks good to me</p>, clear: true},\n  {html: <p>How do you feel about going to the keweenaw?</p>},\n  {html: <p><i><b>Clear and replace text</b> with</i>I was thinking about going to the upper peninsula.</p>, clear: true},\n  {html: <p><i>Insert smiley emoji:</i>This is going to be so much fun üòä</p>, clear:true},\n];\n\nfor (var i = 0; i < prompts.length; i++) {\n  prompts[i].text = stripHtml(prompts[i].html);\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPrompt: -1,\n      taskCompleted: true,\n      shouldClear: true,\n      taskStartTime: 0,\n      taskTimes: [],\n      debug: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n  }\n\n  handleChange(event) {\n    const strip = (str) => str.replaceAll(' ', '').replace(/[\\u2018\\u2019]/g, \"'\").replace(/[\\u201C\\u201D]/g, '\"').toLowerCase();\n    if (this.state.taskCompleted) return;\n    console.log(event.target.value);\n    console.log(prompts[this.state.currentPrompt].text);\n    if (strip(event.target.value).indexOf(strip(prompts[this.state.currentPrompt].text)) > -1)\n      this.setState({taskCompleted: true, taskTimes: [...this.state.taskTimes, Date.now() - this.state.taskStartTime]});\n  }\n\n  handleNext(event) {\n    this.setState({\n      shouldClear: this.state.currentPrompt < 0 || prompts[this.state.currentPrompt].clear,\n      taskCompleted: ((this.state.currentPrompt + 1) < prompts.length) && prompts[this.state.currentPrompt + 1].break,\n      currentPrompt: this.state.currentPrompt + 1,\n      taskStartTime: Date.now()\n    }, () => {\n      if (this.state.currentPrompt < prompts.length) {\n        const textbox = document.getElementById(\"textbox\");\n        textbox.blur();\n        if (this.state.shouldClear) textbox.value = \"\";\n        textbox.focus();\n      }\n    });\n  }\n\n  handleFocus(event) {\n    event.target.select();\n  }\n\n  render() {\n    if (this.state.currentPrompt < prompts.length) {\n      const next = <Next currentPrompt={this.state.currentPrompt} onClick={this.handleNext}/>;\n      const promptIndicator = (this.state.currentPrompt >= 0) ? \n          ((this.state.currentPrompt + 1) + \" / \" + prompts.length) : '';\n      return (\n        <div className=\"App\">\n          <div className=\"half\">\n            <p>\n              {promptIndicator}\n            </p>\n            <h2>{(this.state.currentPrompt in prompts) ? prompts[this.state.currentPrompt].html : ''}</h2>\n            <h2>{this.state.taskCompleted ? next : ''}</h2>\n          </div>\n          <div className=\"bottom half\">\n            <textarea rows=\"4\" id=\"textbox\" onChange={this.handleChange}></textarea>\n          </div>\n        </div>\n      );\n    }\n    else return (\n      <div className=\"App\">\n        <h1>Done- please enter your username then tap submit:</h1>\n        <form action=\"https://docs.google.com/forms/d/e/1FAIpQLSdDzSs-JBDvNuYW225c3Dog4grp0oCIdLfWzQyM0egu6Cf6mg/formResponse\" target=\"_self\" method=\"POST\" id=\"mG61Hd\" jsmodel=\"TOfxwf Q91hve\" data-response=\"%.@.[]]\" data-first-entry=\"0\" data-last-entry=\"1\" data-is-first-page=\"true\">\n          <textarea readOnly name=\"entry.1431434204\" onFocus={this.handleFocus} value={JSON.stringify(this.state.taskTimes)}></textarea>\n          <input name=\"entry.890606469\" placeholder=\"Enter your username here then tap Submit\" />\n          <input name=\"entry.26542893\" type=\"hidden\" value={navigator.userAgent} />\n          <br/><input type=\"submit\" value=\"Submit\"/>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction Next(props) {\n  const text = (props.currentPrompt === -1) ? \"Tap to start\" : \"Tap for next prompt\";\n  return <button onClick={props.onClick} type=\"button\">{text}</button>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}