{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["html","prompts","i","length","text","ReactDOMServer","renderToStaticMarkup","replace","Next","props","currentPrompt","onClick","type","App","state","taskCompleted","taskStartTime","taskTimes","debug","handleChange","bind","handleNext","event","target","value","this","setState","Date","now","select","next","className","onChange","action","method","id","jsmodel","readonly","name","onFocus","handleFocus","JSON","stringify","placeholder","navigator","userAgent","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAgBA,IANA,IALmBA,EAKbC,EAAU,CACd,CACE,KAAQ,0CAIHC,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAClCD,EAAQC,GAAGE,MAZMJ,EAYWC,EAAQC,GAAGF,KAX3BK,IAAeC,qBAAqBN,GACrCO,QAAQ,gBAAiB,KAyEtC,SAASC,EAAKC,GACZ,IAAML,GAAgC,GAAxBK,EAAMC,cAAuB,eAAiB,OAC5D,OAAO,wBAAQC,QAASF,EAAME,QAASC,KAAK,SAArC,SAA+CR,IAGzCS,M,kDAhEb,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXJ,eAAgB,EAChBK,eAAe,EACfC,cAAe,EACfC,UAAW,GACXC,MAAO,IAET,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAVD,E,gDAanB,SAAaE,GACPA,EAAMC,OAAOC,OAASvB,EAAQwB,KAAKX,MAAMJ,eAAeN,MAC1DqB,KAAKC,SAAS,CAACX,eAAe,EAAME,UAAU,GAAD,mBAAMQ,KAAKX,MAAMG,WAAjB,CAA4BU,KAAKC,MAAQH,KAAKX,MAAME,oB,wBAKrG,SAAWM,GACTG,KAAKC,SAAS,CAAChB,cAAee,KAAKX,MAAMJ,cAAgB,EACvDK,eAAe,EAAOC,cAAeW,KAAKC,U,yBAG9C,SAAYN,GACVA,EAAMC,OAAOM,W,oBAGf,WACE,GAAIJ,KAAKX,MAAMJ,cAAgBT,EAAQE,OAAQ,CAC7C,IAAM2B,EAAO,cAACtB,EAAD,CAAME,cAAee,KAAKX,MAAMJ,cAAeC,QAASc,KAAKJ,aAC1E,OACE,sBAAKU,UAAU,MAAf,UACE,sBAAKA,UAAU,OAAf,UACE,6BAAMN,KAAKX,MAAMJ,iBAAiBT,EAAWA,EAAQwB,KAAKX,MAAMJ,eAAeV,KAAO,KACtF,6BAAKyB,KAAKX,MAAMC,cAAgBe,EAAO,KACvC,+BAAKL,KAAKX,MAAMJ,cAAhB,IAAgCe,KAAKX,MAAMI,YAE7C,qBAAKa,UAAU,cAAf,SACE,0BAAUC,SAAUP,KAAKN,oBAK5B,OACH,sBAAKY,UAAU,MAAf,UACE,gIACA,uBAAME,OAAO,0GAA0GV,OAAO,QAAQW,OAAO,OAAOC,GAAG,SAASC,QAAQ,gBAAgB,gBAAc,UAAU,mBAAiB,IAAI,kBAAgB,IAAI,qBAAmB,OAA5Q,UACE,0BAAUC,UAAQ,EAACC,KAAK,mBAAmBC,QAASd,KAAKe,YAAzD,SAAuEC,KAAKC,UAAUjB,KAAKX,MAAMG,aACjG,uBAAOqB,KAAK,kBAAkBK,YAAY,mDAC1C,uBAAOL,KAAK,iBAAiB1B,KAAK,SAASY,MAAOoB,UAAUC,YAC5D,uBAAK,uBAAOjC,KAAK,SAASY,MAAM,qB,GArDxBsB,IAAMC,WCRTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f8da9a16.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOMServer from 'react-dom/server';\n\nimport './App.css';\n\nfunction stripHtml(html) {\n  const str = ReactDOMServer.renderToStaticMarkup(html);\n  return str.replace(/(<([^>]+)>)/gi, \"\");\n}\n\nconst prompts = [\n  {\n    \"html\": <span>Test</span>\n  }\n];\n\nfor (var i = 0; i < prompts.length; i++) {\n  prompts[i].text = stripHtml(prompts[i].html);\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPrompt: -1,\n      taskCompleted: true,\n      taskStartTime: 0,\n      taskTimes: [],\n      debug: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n  }\n\n  handleChange(event) {\n    if (event.target.value == prompts[this.state.currentPrompt].text)\n      this.setState({taskCompleted: true, taskTimes: [...this.state.taskTimes, Date.now() - this.state.taskStartTime]});\n    //this.setState({debug: event.target.value});\n    //[...this.state.taskTimes, Date.now() - this.state.taskStartTime]\n  }\n\n  handleNext(event) {\n    this.setState({currentPrompt: this.state.currentPrompt + 1, \n      taskCompleted: false, taskStartTime: Date.now()})\n  }\n\n  handleFocus(event) {\n    event.target.select();\n  }\n\n  render() {\n    if (this.state.currentPrompt < prompts.length) {\n      const next = <Next currentPrompt={this.state.currentPrompt} onClick={this.handleNext}/>;\n      return (\n        <div className=\"App\">\n          <div className=\"half\">\n            <h1>{(this.state.currentPrompt in prompts) ? prompts[this.state.currentPrompt].html : ''}</h1>\n            <h1>{this.state.taskCompleted ? next : ''}</h1>\n            <h3>{this.state.currentPrompt} {this.state.debug}</h3>\n          </div>\n          <div className=\"bottom half\">\n            <textarea onChange={this.handleChange}></textarea>\n          </div>\n        </div>\n      );\n    }\n    else return (\n      <div className=\"App\">\n        <h1>Done- please copy and paste the information below, enter your participant ID, then tap submit:</h1>\n        <form action=\"https://docs.google.com/forms/d/e/1FAIpQLSdDzSs-JBDvNuYW225c3Dog4grp0oCIdLfWzQyM0egu6Cf6mg/formResponse\" target=\"_self\" method=\"POST\" id=\"mG61Hd\" jsmodel=\"TOfxwf Q91hve\" data-response=\"%.@.[]]\" data-first-entry=\"0\" data-last-entry=\"1\" data-is-first-page=\"true\">\n          <textarea readonly name=\"entry.1431434204\" onFocus={this.handleFocus}>{JSON.stringify(this.state.taskTimes)}</textarea>\n          <input name=\"entry.890606469\" placeholder=\"Enter your participant ID here then tap Submit\" />\n          <input name=\"entry.26542893\" type=\"hidden\" value={navigator.userAgent} />\n          <br/><input type=\"submit\" value=\"Submit\"/>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction Next(props) {\n  const text = (props.currentPrompt == -1) ? \"Tap to start\" : \"Next\";\n  return <button onClick={props.onClick} type=\"button\">{text}</button>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}