{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["stripHtml","html","str","ReactDOMServer","renderToStaticMarkup","txt","document","createElement","innerHTML","parts","value","replace","split","length","prompts","clear","i","text","Next","props","currentPrompt","onClick","type","App","state","taskCompleted","taskStartTime","taskTimes","debug","handleChange","bind","handleNext","event","this","target","indexOf","setState","Date","now","getElementById","select","next","promptIndicator","className","id","onChange","action","method","jsmodel","readOnly","name","onFocus","handleFocus","JSON","stringify","placeholder","navigator","userAgent","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.66165fd6.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\n\nimport './App.css';\n\nfunction stripHtml(html) {\n  const str = ReactDOMServer.renderToStaticMarkup(html);\n  var txt = document.createElement(\"textarea\");\n  txt.innerHTML = str;\n  const parts = txt.value.replace(/(<([^>]+)>)/gi, \"\").split(':');\n  return parts[parts.length - 1];\n}\n\nconst prompts = [\n  {html: <p>Hello how are you doing?</p>},\n  {html: <p><i>Clear and replace text with:</i>Yo Jason, what's up?</p>, clear: true},\n  {html: <p>I would love to catch up. Are you free on Thursday night for a beer?</p>, clear: false},\n  {html: <p><i>Change Thursday to Friday:</i>I would love to catch up. Are you free on <b>Friday</b> night for a beer?</p>, clear: true},\n  {html: <p><i>Insert cake emoji and party emoji:</i>Saturday itâ€™s my birthday so I want to start the celebration early ðŸŽ‚ðŸŽ‰</p>, clear: true},\n  {html: <p>I will ask Kathryn and John if they want to join as well</p>, clear: true},\n  {html: <p>She always talks about calcio</p>, clear: true},\n  {html: <p>Anyways, I hope she can join us</p>, clear: true},\n];\n\nfor (var i = 0; i < prompts.length; i++) {\n  prompts[i].text = stripHtml(prompts[i].html);\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPrompt: -1,\n      taskCompleted: true,\n      taskStartTime: 0,\n      taskTimes: [],\n      debug: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n  }\n\n  handleChange(event) {\n    if (this.state.taskCompleted) return;\n    if (event.target.value.indexOf(prompts[this.state.currentPrompt].text) > -1)\n      this.setState({taskCompleted: true, taskTimes: [...this.state.taskTimes, Date.now() - this.state.taskStartTime]});\n    //this.setState({debug: event.target.value});\n    //[...this.state.taskTimes, Date.now() - this.state.taskStartTime]\n  }\n\n  handleNext(event) {\n    if (this.state.currentPrompt === -1 || prompts[this.state.currentPrompt].clear)\n      document.getElementById(\"textbox\").value = \"\";\n    this.setState({currentPrompt: this.state.currentPrompt + 1, \n      taskCompleted: false, taskStartTime: Date.now()})\n  }\n\n  handleFocus(event) {\n    event.target.select();\n  }\n\n  render() {\n    if (this.state.currentPrompt < prompts.length) {\n      const next = <Next currentPrompt={this.state.currentPrompt} onClick={this.handleNext}/>;\n      const promptIndicator = (this.state.currentPrompt >= 0) ? \n          ((this.state.currentPrompt + 1) + \" / \" + prompts.length) : '';\n      return (\n        <div className=\"App\">\n          <div className=\"half\">\n            <p>\n              {promptIndicator}\n            </p>\n            <h1>{this.state.taskCompleted ? next : ''}</h1>\n            <h1>{(this.state.currentPrompt in prompts) ? prompts[this.state.currentPrompt].html : ''}</h1>\n          </div>\n          <div className=\"bottom half\">\n            <textarea id=\"textbox\" onChange={this.handleChange}></textarea>\n          </div>\n        </div>\n      );\n    }\n    else return (\n      <div className=\"App\">\n        <h1>Done- please copy the information below, enter your participant ID, then tap submit:</h1>\n        <form action=\"https://docs.google.com/forms/d/e/1FAIpQLSdDzSs-JBDvNuYW225c3Dog4grp0oCIdLfWzQyM0egu6Cf6mg/formResponse\" target=\"_self\" method=\"POST\" id=\"mG61Hd\" jsmodel=\"TOfxwf Q91hve\" data-response=\"%.@.[]]\" data-first-entry=\"0\" data-last-entry=\"1\" data-is-first-page=\"true\">\n          <textarea readOnly name=\"entry.1431434204\" onFocus={this.handleFocus} value={JSON.stringify(this.state.taskTimes)}></textarea>\n          <input name=\"entry.890606469\" placeholder=\"Enter your participant ID here then tap Submit\" />\n          <input name=\"entry.26542893\" type=\"hidden\" value={navigator.userAgent} />\n          <br/><input type=\"submit\" value=\"Submit\"/>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction Next(props) {\n  const text = (props.currentPrompt === -1) ? \"Tap to start\" : \"Tap for next prompt\";\n  return <button onClick={props.onClick} type=\"button\">{text}</button>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}